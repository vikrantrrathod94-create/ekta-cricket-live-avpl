async function fetchPublic(){ try{ const res = await fetch('/api/public'); const j = await res.json(); render(j); }catch(e){ console.error(e); } }
function render(data){ const m = data.currentMatch || {}; const players = data.players || []; document.getElementById('playersList').innerHTML = (players.map(p=>`<li>${p.name} (${p.role||''}) #${p.jersey||''}</li>`).join(''))||'<li>No players</li>'; if(!m || m.status==='not_started'){ document.getElementById('teams').innerText = 'No live match'; document.getElementById('scoreline').innerText = '-- / -- (0.0)'; document.getElementById('info').innerText = ''; document.getElementById('ballsList').innerHTML = ''; return; } const teamA = data.teams.find(t=>t.id===m.teamAId) || {name:'Team A', logo:'/public/assets/logo.png'}; const teamB = data.teams.find(t=>t.id===m.teamBId) || {name:'Team B', logo:'/public/assets/logo.png'}; document.getElementById('teams').innerHTML = `<img src="${teamA.logo}" class="tlogo"/> ${teamA.name} <span class="vs">vs</span> ${teamB.name} <img src="${teamB.logo}" class="tlogo"/>`; const inn = m.innings || {runs:0,wickets:0,overs:0,balls:0,ballsLog:[]}; document.getElementById('scoreline').innerText = `${inn.runs} / ${inn.wickets} (${inn.overs}.${inn.balls||0})`; document.getElementById('info').innerText = `Overs: ${m.overs||20} â€¢ Status: ${m.status||'N/A'}`; const last = (inn.ballsLog||[]).slice().reverse().slice(0,12); const ul = document.getElementById('ballsList'); ul.innerHTML=''; last.forEach(b=>{ const li=document.createElement('li'); li.innerText=(b.isWicket?'W':b.runs)+(b.extra?(' ('+b.extra+')'):'' ); ul.appendChild(li); }); }
let evt; try{ evt = new EventSource('/api/stream'); evt.onmessage = function(e){ try{ fetchPublic(); }catch(err){} }; }catch(e){ setInterval(fetchPublic,5000); } fetchPublic(); const canvas = document.getElementById('particles'); const ctx = canvas.getContext('2d'); function resize(){ canvas.width=innerWidth; canvas.height=innerHeight; } resize(); addEventListener('resize', resize); const parts=[]; for(let i=0;i<80;i++){ parts.push({x:Math.random()*canvas.width,y:Math.random()*canvas.height,r:Math.random()*2+0.6,vx:(Math.random()-0.5)*0.5,vy:(Math.random()-0.5)*0.5,alpha:Math.random()*0.6+0.2}); } function frame(){ ctx.clearRect(0,0,canvas.width,canvas.height); for(const p of parts){ p.x+=p.vx; p.y+=p.vy; if(p.x<0)p.x=canvas.width; if(p.x>canvas.width)p.x=0; if(p.y<0)p.y=canvas.height; if(p.y>canvas.height)p.y=0; ctx.beginPath(); ctx.fillStyle='rgba(108,92,231,'+p.alpha+')'; ctx.arc(p.x,p.y,p.r,0,Math.PI*2); ctx.fill(); } requestAnimationFrame(frame); } frame();
